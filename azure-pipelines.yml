trigger:
  branches:
    include:
    - master
    - dev
    - release/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  clientProjectPath: 'source/OpenRedding.Client/OpenRedding.Client.csproj'
  clientProjectDist: '$(Build.SourcesDirectory)/source/OpenRedding.Client/dist'

steps:
# Use the SDK version in global.json  
- task: UseDotNet@2
  displayName: 'Install global.json SDK version'
  inputs:
    packageType: 'sdk'
    useGlobalJson: true

# Run all unit and integration tests
- task: DotNetCoreCLI@2
  displayName: 'Run unit and integration tests'
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'
    testRunTitle: 'Run tests'

# Build the client project
- task: DotNetCoreCLI@2
  displayName: 'Build client project'
  inputs:
    command: 'build'
    projects: '$(clientProjectPath)'
    arguments: '-c $(buildConfiguration)'

# Build the distribution files for the client
- task: DotNetCoreCLI@2
  displayName: 'Publish client project'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(clientProjectPath)'
    arguments: '--no-restore --output $(Build.StagingDirectory)/dist'
    zipAfterPublish: false
    modifyOutputPath: true

### PRODUCTION DEPLOYMENT STEPS ###
# Build and deploy the docker image
- task: Docker@2
  displayName: 'Build and deploy Docker container'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    containerRegistry: 'DockerHub'
    repository: 'joey32793/openreddingapi'
    command: 'buildAndPush'
    Dockerfile: 'source/OpenRedding.Api/Dockerfile.production'
    buildContext: '$(Build.SourcesDirectory)'
    tags: 'latest'

# Update the build version on the client appSettings file    
- task: PowerShell@2
  displayName: 'Update client configuration files'
  inputs:
    targetType: 'inline'
    script: |
      function Add-OrUpdateJsonMember {
          [CmdletBinding()]
          Param(
              [Parameter(Position=0, Mandatory=$true)]
              [string]$Property,
              [Parameter(Position=1, Mandatory=$true)]
              [string]$Value,
              [Parameter(Position=2, Mandatory=$true)]
              [PSCustomObject]$Json
          )
      
          # Check for existence of the property
          $PropertyExists = [bool](Get-Member -InputObject $Json -Name $Property -MemberType Properties)
      
          # Add the property if none is found, else update the value if available
          if ($PropertyExists) {
              $Json.$Property = $Value
          } else {
              $Json | Add-Member -Name $Property -value $Value -MemberType NoteProperty
          }
      }
      
      $MajorVersion = '1'
      $BuildNumber = $(Build.BuildNumber)
      
      $MajorVersionProperty = 'MajorVersion'
      $BuilderNumberProperty = 'BuildNumber'
      $appSettingsFilePath = '$(Build.StagingDirectory)/dist/OpenRedding.Client/wwwroot/appsettings.json'
      
      # Open the file and modify/update the property values
      $appSettings = Get-Content $appSettingsFilePath -Raw | ConvertFrom-Json
      Add-OrUpdateJsonMember -Property $MajorVersionProperty -Value $MajorVersion -Json $appSettings
      Add-OrUpdateJsonMember -Property $BuilderNumberProperty -Value $BuildNumber -Json $appSettings
      
      # Override the configuration file
      $appSettings | ConvertTo-Json -Depth 32 | Set-Content $appSettingsFilePath

      # Remove the development file from distribution
      Remove-Item -Force '$(Build.StagingDirectory)/dist/OpenRedding.Client/wwwroot/appsettings.Development.json'
    failOnStderr: true
    pwsh: true

# Install netlify-cli
- script: npm install netlify-cli 
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Install netlify-cli'

# Deploy the wwwroot directory from the distribution folder
- script: npx netlify deploy --prod --dir $(Build.StagingDirectory)/dist/OpenRedding.Client/wwwroot --site $(netlifySiteId) --auth $(netlifyApiKey)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Deploy client project to Netlify'
